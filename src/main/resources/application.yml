spring:
  application:
    name: kill-batch-system
  config:
    import: optional:file:.env[.properties]
  profiles:
    active:
      - dev
  flyway:
    enabled: true
    baseline-on-migrate: true
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}

openai:
  api-key: ${OPENAI_API_KEY}
  model: gpt-3.5-turbo

summary:
  scheduler:
    batch-size: 2          # 한 번 실행당 가져올 건수
    max-per-tick: 200       # 한 번 실행에서 최대 처리 총량 (여러 배치 루프)
    throttle-ms: 300        # OpenAI 호출 사이 간격 (과금/레이트리밋 대비)

article:
  espn:
    epl-url: "https://site.api.espn.com/apis/site/v2/sports/soccer/eng.1/news"
    esp-url: "https://site.api.espn.com/apis/site/v2/sports/soccer/esp.1/news"
  goal:
    en-url: "https://www.goal.com/en-gb/google-news/page"
    kr-url: "https://www.goal.com/kr/google-news/page"
  bbc:
    url: "https://feeds.bbci.co.uk/sport/football/rss.xml"
  limit: 10

security:
  jwt:
    secret: ${SECURITY_JWT_SECRET}
    access-token-validity-seconds: 900 # 15분
    refresh-token-validity-seconds: 604800 # 7일

hancut:
  admin:
    nickname: ${ADMIN_NICKNAME}
    password: ${ADMIN_PASSWORD}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region: ap-northeast-2
    s3:
      bucket: ${BUCKET_NAME}

scheduler:
  bbc:
    cron: "0 45 * * * *"
  goal:
    cron: "0 47 * * * *"
  espn:
    epl-cron: "0 42 * * * *"
    esp-cron: "0 42 * * * *"

file:
  upload:
    profiles:
      path: profiles/images/
      allowed-extensions: jpg,jpeg,png,gif,webp
      max-size: 1048576 # 1MB (1024*1024)

management:
  endpoints:
    web:
      exposure:
        include: metrics, health, prometheus