-- 본문 테이블
create table if not exists articles (
                                        id               bigserial primary key,

                                        article_id varchar(64) not null,
    url              varchar(2048) not null,
    content          text,

    thumbnail_url    varchar(2048),

    source_name      varchar(64),

    published_at     timestamp not null,
    created_at       timestamp default now(),
    summarize_status VARCHAR(16) NOT NULL DEFAULT 'PENDING',

    constraint uk_article_id unique(article_id)
    );

create table if not exists ai_summary (
                                          id             bigserial primary key,

                                          title          varchar(255) not null,
    league         varchar(64) not null,
    team           varchar(64) not null,

    contents       jsonb not null,              -- @JdbcTypeCode(SqlTypes.JSON)
    published_at   timestamp not null,
    thumbnail_url  varchar(2048) not null,
    url            varchar(2048) not null,
    source_name      varchar(64) not null
    );

-- ===== @ElementCollection: keywords =====
create table if not exists ai_summary_keywords (
                                                   id          bigserial primary key,
                                                   ai_summary_id   bigint not null references ai_summary(id) on delete cascade,
    keyword     varchar(64) not null
    );

CREATE TABLE comments (
                          id bigserial PRIMARY KEY,
                          ai_summary_id BIGINT NOT NULL,
                          author VARCHAR(255) NOT NULL,
                          content TEXT NOT NULL,
                          created_at       timestamp default now()
);

create table users (
                       id bigserial primary key,
                       nickname varchar(255) not null unique,
                       encoded_pass varchar(255) not null,
                       profile_image_url varchar(500),
                       is_locked boolean not null default false,
                       role varchar(50) not null,
                       created_at timestamp not null default now()
);

CREATE TABLE reactions (
                           id BIGSERIAL PRIMARY KEY,
                           ai_summary_id BIGINT NOT NULL,
                           user_id VARCHAR(255) NOT NULL,
                           type VARCHAR(10) NOT NULL CHECK (type IN ('LIKE', 'DISLIKE')),
                           created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                           CONSTRAINT unique_card_user UNIQUE (ai_summary_id, user_id)
);

CREATE TABLE refresh_token (
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               nickname VARCHAR(255) NOT NULL,
                               refresh_token VARCHAR(512) NOT NULL,
                               issued_at TIMESTAMPTZ NOT NULL,
                               expiration_time TIMESTAMPTZ NOT NULL,
                               CONSTRAINT uk_jwt_token_refresh UNIQUE (refresh_token),
                               CONSTRAINT ck_jwt_token_time CHECK (expiration_time > issued_at)
);