-- 본문 테이블
create table if not exists articles (
                                        id               bigserial primary key,

                                        article_id varchar(64) not null,
                                        url              varchar(2048) not null,
                                        content          text,

                                        thumbnail_url    varchar(2048),

                                        source_name      varchar(64),

                                        published_at     timestamp not null,
                                        created_at       timestamp default now(),
                                        summarize_status VARCHAR(16) NOT NULL DEFAULT 'PENDING',

                                        constraint uk_article_id unique(article_id)
);

create table if not exists ai_summary (
                                           id             bigserial primary key,

                                           title          varchar(255),
                                           league         varchar(64),
                                           team           varchar(64),

                                           contents       jsonb,              -- @JdbcTypeCode(SqlTypes.JSON)
                                           published_at   timestamp,
                                           thumbnail_url  varchar(2048),
                                           url            varchar(2048),
                                           source_name      varchar(64)
);

-- ===== @ElementCollection: keywords =====
create table if not exists ai_summary_keywords (
                                                id          bigserial primary key,
                                                ai_summary_id   bigint not null references ai_summary(id) on delete cascade,
                                                keyword     varchar(64) not null
);

CREATE TABLE comments (
                          id bigserial PRIMARY KEY,
                          ai_summary_id BIGINT NOT NULL,
                          author VARCHAR(255) NOT NULL,
                          content TEXT NOT NULL,
                          created_at       timestamp default now()
);

create table users (
                       id bigserial primary key,
                       nickname varchar(255) not null unique,
                       encoded_pass varchar(255) not null,
                       profile_image_url varchar(500),
                       is_locked boolean not null default false,
                       role varchar(50) not null,
                       created_at timestamp not null default now()
);

CREATE TABLE reactions (
                           id BIGSERIAL PRIMARY KEY,
                           ai_summary_id BIGINT NOT NULL,
                           user_id VARCHAR(255) NOT NULL,
                           type VARCHAR(10) NOT NULL CHECK (type IN ('LIKE', 'DISLIKE')),
                           created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                           CONSTRAINT unique_card_user UNIQUE (ai_summary_id, user_id)
);

CREATE TABLE refresh_token (
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               nickname VARCHAR(255) NOT NULL,
                               refresh_token VARCHAR(512) NOT NULL,
                               issued_at TIMESTAMPTZ NOT NULL,
                               expiration_time TIMESTAMPTZ NOT NULL,
                               CONSTRAINT uk_jwt_token_refresh UNIQUE (refresh_token),
                               CONSTRAINT ck_jwt_token_time CHECK (expiration_time > issued_at)
);

-- 기본 최신순 조회
create index if not exists idx_ai_summary_published_at
    on ai_summary (published_at desc);

-- 소스별 필터링 + 최신순
CREATE INDEX IF NOT EXISTS idx_ai_summary_source_published
    ON ai_summary (source_name, published_at DESC);

-- 키워드 검색 최적화
CREATE INDEX IF NOT EXISTS idx_keywords_summary_published
    ON ai_summary_keywords (keyword, ai_summary_id);

-- 특정 요약의 키워드 조회 (관리 기능)
CREATE INDEX IF NOT EXISTS idx_ai_article_keywords_article
    ON ai_summary_keywords (ai_summary_id);

-- 커서 페이징 최적화
CREATE INDEX IF NOT EXISTS idx_comments_ai_created_id_desc
    ON comments (ai_summary_id, created_at DESC, id DESC);

--반응 통계 조회 최적화
CREATE INDEX IF NOT EXISTS idx_reactions_summary_type
    ON reactions (ai_summary_id, type);

-- 사용자별 반응 조회
CREATE INDEX IF NOT EXISTS idx_reactions_user_summary
    ON reactions (user_id, ai_summary_id);

-- 배치 작업 최적화
CREATE INDEX IF NOT EXISTS idx_articles_pending_status
    ON articles (summarize_status, id)
    WHERE summarize_status = 'PENDING';

-- 토큰 조회 최적화
CREATE INDEX IF NOT EXISTS idx_refresh_token_nickname
    ON refresh_token (nickname);